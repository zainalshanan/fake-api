openapi: 3.0.0
info:
  title: Blog API
  version: 1.0.0
  description: A blog API with posts, comments, and authors

components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        bio:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - email

    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        authorId:
          type: string
          format: uuid
        postId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - content
        - authorId
        - postId

    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        authorId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [draft, published, archived]
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        author:
          $ref: '#/components/schemas/Author'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - title
        - content
        - authorId

paths:
  /posts:
    get:
      summary: List all posts
      operationId: getPosts
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, published, archived]
        - name: authorId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new post
      operationId: createPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Created post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

  /posts/{postId}:
    parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get a post by ID
      operationId: getPostById
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    put:
      summary: Update a post
      operationId: updatePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Updated post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      summary: Delete a post
      operationId: deletePost
      responses:
        '204':
          description: Post deleted

  /posts/{postId}/comments:
    parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: List comments for a post
      operationId: getPostComments
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      summary: Add a comment to a post
      operationId: createPostComment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Created comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /authors:
    get:
      summary: List all authors
      operationId: getAuthors
      responses:
        '200':
          description: List of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

  /authors/{authorId}:
    parameters:
      - name: authorId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get author by ID
      operationId: getAuthorById
      responses:
        '200':
          description: Author details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'

  /comments:
    get:
      summary: List all comments
      operationId: getComments
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /comments/{commentId}:
    parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get comment by ID
      operationId: getCommentById
      responses:
        '200':
          description: Comment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment' 